<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML Studio - FREE Community Edition 7.0.5.906 (http://www.liquid-technologies.com)-->
<xs:schema xmlns="Backsight" elementFormDefault="qualified" targetNamespace="Backsight" id="Edits" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="ArcType">
    <xs:annotation>
      <xs:documentation>A circular arc</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="LineType">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="1">
            <xs:element name="FirstArc" type="IdType" />
            <xs:element name="Circle" type="CircleType" />
          </xs:choice>
        </xs:sequence>
        <xs:attribute default="true" name="Clockwise" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttachPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="Point" type="FeatureDataType" />
        </xs:sequence>
        <xs:attribute name="Line" type="IdType" use="required" />
        <xs:attribute name="PositionRatio" type="xs:unsignedInt" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CircleType">
    <xs:attribute name="Center" type="IdType" />
    <xs:attribute name="Radius" type="xs:double" />
  </xs:complexType>
  <xs:complexType name="EditType">
    <xs:annotation>
      <xs:documentation>The top level element, corresponding to a row in the ced.Edits table. The system currently works with just one operation - however, the notion of an edit that consists of multiple operations is probably quite useful.</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="Operation" type="OperationType" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Edit" type="EditType" />
  <xs:complexType name="FeatureType" abstract="true">
    <xs:attribute name="Id" type="IdType" />
    <xs:attribute name="Type" type="xs:unsignedInt" />
    <xs:attribute name="Key" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:attributeGroup name="FeatureDataGroup">
    <xs:attribute name="Id" type="IdType" />
    <xs:attribute name="Type" type="xs:unsignedInt" />
    <xs:attribute name="Key" type="xs:string" use="optional" />
  </xs:attributeGroup>
  <xs:complexType name="FeatureDataType">
    <xs:attributeGroup ref="FeatureDataGroup" />
  </xs:complexType>
  <xs:element name="Feature" type="FeatureType" />
  <xs:simpleType name="IdType">
    <xs:annotation>
      <xs:documentation>The ID for features and editing operations. Backsight defines this by concatenating the ID of the sesion in which the item was created, followed by a sequence number indicating the creation order within the session. The very first ID is 1.1

Dealing with these two components as a single formatted string may well be "bad" from a design point of view. The main reason for doing so is that it's more natural to think of an identifier as a single attribute value (could make it an element, but that's a bit messier).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{1,10}\.[0-9]{1,10}" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="LineType">
    <xs:annotation>
      <xs:documentation>A line feature plus its associated geometry. The base type is suitable for simple line segments (probably 80% of all lines in a cadastral mapping environment).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:attribute name="From" type="IdType" />
        <xs:attribute name="To" type="IdType" />
        <xs:attribute default="true" name="Topological" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MiscTextType">
    <xs:complexContent mixed="false">
      <xs:extension base="TextType">
        <xs:attribute name="Text" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MultiSegmentType">
    <xs:annotation>
      <xs:documentation>A line feature with geometry defined by many positions. In a cadastral mapping environment, this usually corresponds to things like river lines (imported from some external source).

The first and last positions are assumed to match the positions of the point features that must exist at the ends of all lines.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="LineType">
        <xs:sequence>
          <xs:element minOccurs="2" maxOccurs="unbounded" name="Point" type="PointGeometryType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MultiSegment" type="MultiSegmentType" />
  <xs:complexType name="NewLineType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="Line" type="LineType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NewPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence>
          <xs:element name="Point" type="PointType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="NewPoint" type="NewPointType" />
  <xs:complexType name="OperationType" abstract="true">
    <xs:attribute name="Id" type="IdType" use="required" />
  </xs:complexType>
  <xs:complexType name="PointType">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:attribute name="X" type="xs:unsignedLong" use="required" />
        <xs:attribute name="Y" type="xs:unsignedLong" use="required" />
        <xs:attribute name="Z" type="xs:unsignedLong" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PointGeometryType">
    <xs:attribute name="X" type="xs:unsignedLong" use="required" />
    <xs:attribute name="Y" type="xs:unsignedLong" use="required" />
    <xs:attribute name="Z" type="xs:unsignedLong" use="optional" />
  </xs:complexType>
  <xs:complexType name="RowTextType">
    <xs:complexContent mixed="false">
      <xs:extension base="TextType">
        <xs:attribute name="RowKey" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>The key of the row containing the information that defines this text (as opposed to the key of the text itself)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Table" type="xs:unsignedInt" use="required" />
        <xs:attribute name="Template" type="xs:unsignedInt" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RowText" type="RowTextType" />
  <xs:complexType name="SectionType">
    <xs:complexContent mixed="false">
      <xs:extension base="LineType">
        <xs:attribute name="Base" type="IdType" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SharedPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:sequence />
        <xs:attribute name="FirstPoint" type="IdType" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SharedPoint" type="SharedPointType" />
  <xs:complexType name="TextType">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:attribute name="X" type="xs:unsignedLong" use="required" />
        <xs:attribute name="Y" type="xs:unsignedLong" use="required" />
        <xs:attribute name="Height" type="xs:double" use="required" />
        <xs:attribute name="Width" type="xs:double" use="required" />
        <xs:attribute name="Rotation" type="xs:string" use="optional" />
        <xs:attribute name="Font" type="xs:unsignedInt" use="optional" />
        <xs:attribute default="true" name="Topological" type="xs:boolean" use="optional" />
        <xs:attribute name="PolygonX" type="xs:unsignedLong" use="optional" />
        <xs:attribute name="PolygonY" type="xs:unsignedLong" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ImportType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="unbounded">
          <xs:element name="Feature" type="FeatureType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>