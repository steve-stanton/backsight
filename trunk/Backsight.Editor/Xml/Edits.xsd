<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML Studio - FREE Community Edition 7.0.5.906 (http://www.liquid-technologies.com)-->
<xs:schema xmlns="Backsight" elementFormDefault="qualified" targetNamespace="Backsight" id="Edits" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Edit" type="EditType" />
  <xs:complexType name="AngleType">
    <xs:complexContent mixed="false">
      <xs:extension base="DirectionType">
        <xs:attribute name="Value" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>The angle in DMS format. A negated value indicates an anticlockwise angle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="From" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The occupied station</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Backsight" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The backsight point</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ArcType">
    <xs:annotation>
      <xs:documentation>A circular arc</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="LineType">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="1">
            <xs:element name="FirstArc" type="IdType" />
            <xs:element name="Circle" type="CircleType" />
          </xs:choice>
        </xs:sequence>
        <xs:attribute default="false" name="Clockwise" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttachPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="Point" type="CalculatedFeatureType" />
        </xs:sequence>
        <xs:attribute name="Line" type="IdType" use="required" />
        <xs:attribute name="PositionRatio" type="xs:unsignedInt" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BearingType">
    <xs:complexContent mixed="false">
      <xs:extension base="DirectionType">
        <xs:attribute name="Value" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>The bearing value in radians - in the range [0,2*Pi)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="From" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The point from which the bearing was observed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CalculatedFeatureType">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CircleType">
    <xs:attribute name="Center" type="IdType" />
    <xs:attribute name="Radius" type="xs:double" />
  </xs:complexType>
  <xs:complexType name="DeflectionType">
    <xs:complexContent mixed="false">
      <xs:extension base="AngleType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DeletionType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="unbounded">
          <xs:element name="Delete" type="IdType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DirectionType">
    <xs:complexContent mixed="false">
      <xs:extension base="ObservationType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element name="Offset" type="OffsetType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DistanceType">
    <xs:complexContent mixed="false">
      <xs:extension base="ObservationType">
        <xs:attribute name="Value" type="xs:double" use="required" />
        <xs:attribute name="Unit" type="DistanceUnitType" use="required" />
        <xs:attribute default="false" name="Fixed" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="DistanceUnitType">
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="3" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="EditType">
    <xs:annotation>
      <xs:documentation>The top level element, corresponding to a row in the ced.Edits table. The system currently works with just one operation - however, the notion of an edit that consists of multiple operations is probably quite useful.</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="Operation" type="OperationType" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FeatureType" abstract="true">
    <xs:attribute name="Id" type="IdType" use="required" />
    <xs:attribute name="Type" type="xs:int" use="required" />
    <xs:attribute name="Key" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="GetControlType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Point" type="PointType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="IdType">
    <xs:annotation>
      <xs:documentation>The ID for features and editing operations. Backsight defines this by concatenating the ID of the sesion in which the item was created, followed by a sequence number indicating the creation order within the session. The very first ID is 1.1

Dealing with these two components as a single formatted string may well be "bad" from a design point of view. The main reason for doing so is that it's more natural to think of an identifier as a single attribute value (could make it an element, but that's a bit messier).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{1,10}:[0-9]{1,10}" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ImportType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="unbounded">
          <xs:element name="Feature" type="FeatureType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="IntersectDirectionAndDistanceType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="Direction" type="DirectionType">
            <xs:annotation>
              <xs:documentation>The observed direction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="Distance" type="ObservationType">
            <xs:annotation>
              <xs:documentation>The observed distance (either a DistanceType, or an OffsetPointType).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="To" type="CalculatedFeatureType">
            <xs:annotation>
              <xs:documentation>The created intersection point</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="DirLine" type="CalculatedFeatureType">
            <xs:annotation>
              <xs:documentation>The first line created (if any), running from the point at which the direction was observed, to the intersection point. Should always be null if the direction has an offset.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="DistLine" type="CalculatedFeatureType">
            <xs:annotation>
              <xs:documentation>The second line created (if any), running from the the point at which the distance was observed, to the intersection point.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="From" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The point the distance was measured from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" name="Default" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>True if it was the default intersection (the one closest to the origin of the direction).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="KeyTextType">
    <xs:complexContent mixed="false">
      <xs:extension base="TextType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LineType" abstract="true">
    <xs:annotation>
      <xs:documentation>A line feature plus its associated geometry. The base type is suitable for simple line segments (probably 80% of all lines in a cadastral mapping environment).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:attribute name="From" type="IdType" />
        <xs:attribute name="To" type="IdType" />
        <xs:attribute default="true" name="Topological" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MiscTextType">
    <xs:complexContent mixed="false">
      <xs:extension base="TextType">
        <xs:attribute name="Text" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MultiSegmentType">
    <xs:annotation>
      <xs:documentation>A line feature with geometry defined by many positions. In a cadastral mapping environment, this usually corresponds to things like river lines (imported from some external source).

The first and last positions are assumed to match the positions of the point features that must exist at the ends of all lines.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="LineType">
        <xs:sequence>
          <xs:element minOccurs="3" maxOccurs="unbounded" name="Point" type="PointGeometryType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NewLineType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="Line" type="LineType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NewPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="OperationType">
        <xs:sequence>
          <xs:element name="Point" type="PointType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ObservationType" abstract="true" />
  <xs:complexType name="OffsetType" abstract="true">
    <xs:complexContent mixed="false">
      <xs:extension base="ObservationType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OffsetDistanceType">
    <xs:complexContent mixed="false">
      <xs:extension base="OffsetType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="Distance" type="DistanceType" />
        </xs:sequence>
        <xs:attribute default="false" name="Left" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OffsetPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="OffsetType">
        <xs:attribute name="Point" type="IdType" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OperationType" abstract="true">
    <xs:attribute name="Id" type="IdType" use="required" />
  </xs:complexType>
  <xs:complexType name="ParallelType">
    <xs:complexContent mixed="false">
      <xs:extension base="DirectionType">
        <xs:attribute name="From" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The origin of the direction line</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Start" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The starting point of the direction line</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="End" type="IdType" use="required">
          <xs:annotation>
            <xs:documentation>The ending point of the direction line</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PointType">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:attribute name="X" type="xs:long" use="required" />
        <xs:attribute name="Y" type="xs:long" use="required" />
        <xs:attribute name="Z" type="xs:long" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PointGeometryType">
    <xs:attribute name="X" type="xs:long" use="required" />
    <xs:attribute name="Y" type="xs:long" use="required" />
    <xs:attribute name="Z" type="xs:long" use="optional" />
  </xs:complexType>
  <xs:complexType name="RowTextType">
    <xs:complexContent mixed="false">
      <xs:extension base="TextType">
        <xs:attribute name="RowKey" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>The key of the row containing the information that defines this text (as opposed to the key of the text itself)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Table" type="xs:unsignedInt" use="required" />
        <xs:attribute name="Template" type="xs:unsignedInt" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SectionType">
    <xs:complexContent mixed="false">
      <xs:extension base="LineType">
        <xs:attribute name="Base" type="IdType" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SegmentType">
    <xs:complexContent mixed="false">
      <xs:extension base="LineType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SharedPointType">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:sequence />
        <xs:attribute name="FirstPoint" type="IdType" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TextType" abstract="true">
    <xs:complexContent mixed="false">
      <xs:extension base="FeatureType">
        <xs:attribute name="X" type="xs:long" use="required" />
        <xs:attribute name="Y" type="xs:long" use="required" />
        <xs:attribute name="Height" type="xs:double" use="required" />
        <xs:attribute name="Width" type="xs:double" use="required" />
        <xs:attribute name="Rotation" type="xs:string" use="optional" />
        <xs:attribute name="Font" type="xs:int" use="optional" />
        <xs:attribute default="true" name="Topological" type="xs:boolean" use="optional" />
        <xs:attribute name="PolygonX" type="xs:long" use="optional" />
        <xs:attribute name="PolygonY" type="xs:long" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>